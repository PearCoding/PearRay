# Locate OpenImageIO
# This module defines
#  OIIO_FOUND, if false, do not try to link to OSL
#  OIIO_LIBRARIES
#  OIIO_INCLUDE_DIR
#
# Calling convection: <OpenImageIO/version.h>

SET(OIIO_FOUND FALSE)
SET(OIIO_INCLUDE_DIRS)
SET(OIIO_LIBRARIES)

function(OIIO_FIND_LIB setname names)
find_library(${setname}
  NAMES ${names}
  HINTS
    ENV OIIO_HOME
  PATH_SUFFIXES lib
  PATHS
  ~/Library/Frameworks
  /Library/Frameworks
  /sw
  /opt/local
  /opt/csw
  /opt
  /usr
  ${CMAKE_LIBRARY_PATH}
  ${OIIO_DIR}
)
endfunction()

find_path(OIIO_INCLUDE_DIR OpenImageIO/version.h
  HINTS
    ENV OIIO_HOME
  PATH_SUFFIXES include/ local/include/
  PATHS
  ~/Library/Frameworks
  /Library/Frameworks
  /sw # Fink
  /opt/csw # Blastwave
  /opt
  /usr
  ${CMAKE_LIBRARY_PATH}
  ${OIIO_DIR}
)
IF(OIIO_INCLUDE_DIR)
	SET(OIIO_INCLUDE_DIRS ${OIIO_INCLUDE_DIR})
ENDIF()

OIIO_FIND_LIB(OIIO_LIBRARY_RELEASE OpenImageIO)
OIIO_FIND_LIB(OIIO_UTIL_LIBRARY_RELEASE OpenImageIO_Util)
OIIO_FIND_LIB(OIIO_LIBRARY_DEBUG OpenImageIO_d)
OIIO_FIND_LIB(OIIO_UTIL_LIBRARY_DEBUG OpenImageIO_Util_d)

IF(OIIO_LIBRARY_RELEASE AND OIIO_UTIL_LIBRARY_RELEASE)
  IF(OIIO_LIBRARY_DEBUG AND OIIO_UTIL_LIBRARY_DEBUG)
	SET(OIIO_LIBRARIES 
		optimized "${OIIO_LIBRARY_RELEASE}" optimized "${OIIO_UTIL_LIBRARY_RELEASE}" 
		debug "${OIIO_LIBRARY_DEBUG}" debug "${OIIO_UTIL_LIBRARY_DEBUG}")
  ELSE()
	SET(OIIO_LIBRARIES "${OIIO_LIBRARY_RELEASE};${OIIO_UTIL_LIBRARY_RELEASE}")
  ENDIF()
ENDIF()

IF (OIIO_INCLUDE_DIR AND OIIO_LIBRARIES)
	SET(OIIO_FOUND TRUE)
ENDIF()

IF (OIIO_FOUND)
	IF (NOT OpenImageIO_FIND_QUIETLY)
		MESSAGE(STATUS "Found OIIO: ${OIIO_INCLUDE_DIR} LIBS: ${OIIO_LIBRARIES}")
	ENDIF (NOT OpenImageIO_FIND_QUIETLY)
ELSE (OIIO_FOUND)
	IF (OpenImageIO_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "Could not find OpenImageIO")
	ENDIF (OpenImageIO_FIND_REQUIRED)
ENDIF (OIIO_FOUND)

mark_as_advanced(OIIO_INCLUDE_DIR OIIO_LIBRARY_RELEASE OIIO_UTIL_LIBRARY_RELEASE OIIO_LIBRARY_DEBUG OIIO_UTIL_LIBRARY_DEBUG)

