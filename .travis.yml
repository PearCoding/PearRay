language: cpp
dist: focal
addons:
  apt:
    packages:
      - lcov
      - qtbase5-dev
      - libqt5charts5-dev
      - libeigen3-dev
      - libtbb-dev
      - libopenimageio-dev
      - libembree-dev
      - python3.8-dev
      - python3.8-venv
      - python3-numpy
      - ninja-build
      - clang-8
cache: ccache
env:
  global:
    - CXXFLAGS="-Wall -Wextra -Wpedantic -march=native"
jobs:
  fast_finish: true
  include:
    - compiler: gcc
      env: USE_COVERAGE=ON PYTHON=3 EMBED_PLUGINS=OFF USE_ASSERTS=ON
    - compiler: gcc
      env: USE_COVERAGE=OFF PYTHON=3 EMBED_PLUGINS=ON USE_ASSERTS=ON
    - compiler: clang
      env: USE_COVERAGE=OFF PYTHON=3 EMBED_PLUGINS=OFF CC=clang-8 CXX=clang++-8 USE_ASSERTS=ON
    - compiler: clang
      env: USE_COVERAGE=OFF PYTHON=3 EMBED_PLUGINS=ON CC=clang-8 CXX=clang++-8 USE_ASSERTS=ON
    - compiler: clang
      env: USE_COVERAGE=OFF PYTHON=3 EMBED_PLUGINS=ON CC=clang-8 CXX=clang++-8 USE_ASSERTS=OFF
before_install:
  - if [ $USE_COVERAGE == ON ]; then pip install --user cpp-coveralls; fi
before_script:
  - $CXX --version
  - cmake --version
  - mkdir build
  - cd build
  - if [ $USE_COVERAGE == ON ]; then lcov --directory . --zerocounters; fi
  - cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Debug -DPR_USE_LTO=OFF -DPR_WITH_EXTRA_PLUGINS=OFF -DPR_BUILD_TESTS_PYTHON=OFF -DPR_WITH_ASSERTS=$USE_ASSERTS -DPR_GENERATE_COVERAGE=$USE_COVERAGE -DPYBIND11_PYTHON_VERSION=$PYTHON -DPR_EMBED_PLUGINS=$EMBED_PLUGINS ..
script:
  - ninja
after_success:
  - ctest --output-on-failure || true
  - if [ $USE_COVERAGE == ON ]; then ninja coveralls; fi
notifications:
  email: false
