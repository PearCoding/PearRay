set(PR_Src
  PR_Config.h.in
  IObject.h
  Logger.cpp
  Logger.h
  PrettyPrint.h
  Platform.h
  Platform.cpp
  Profiler.h
  Profiler.cpp
  Random.h
  Variant.h
  buffer/AOV.h
  buffer/ColorBuffer.cpp
  buffer/ColorBuffer.h
  buffer/Feedback.h
  buffer/FrameBuffer.h
  buffer/OutputBuffer.cpp
  buffer/OutputBuffer.h
  buffer/OutputBufferBucket.cpp
  buffer/OutputBufferBucket.h
  buffer/OutputBufferData.cpp
  buffer/OutputBufferData.h
  buffer/OutputBufferData.inl
  bxdf/BxDF.h
  bxdf/BxDFContainer.cpp
  bxdf/BxDFContainer.h
  bxdf/BxDFData.h
  bxdf/BxDFType.h
  cache/ICachable.h
  cache/Cache.h
  cache/Cache.cpp
  cache/ISerializeCachable.h
  cache/ISerializeCachable.cpp
  camera/ICamera.cpp
  camera/ICamera.h
  config/Build.cpp
  config/Build.h
  config/ColliderOptions.h.in
  config/Constants.inl
  config/HW_Switch.inl.in
  config/SIMD.inl
  config/TriangleOptions.h.in
  config/Types.inl
  config/VectorGlue.inl
  config/Version.h.in
  container/IndexSort.h
  container/Interval.h
  container/kdTreeBuilder.cpp
  container/kdTreeBuilder.h
  container/kdTreeBuilderNaive.cpp
  container/kdTreeBuilderNaive.h
  container/kdTreeCollider.cpp
  container/kdTreeCollider.h
  container/QuickSort.h
  container/RadixSort.h
  curve/Curve.h
  entity/IEntity.cpp
  entity/IEntity.h
  entity/IEntity.inl
  entity/ITransformable.cpp
  entity/ITransformable.h
  entity/ITransformable.inl
  emission/IEmission.cpp
  emission/IEmission.h
  filter/IFilter.h
  filter/IFilterFactory.h
  geometry/BoundingBox.cpp
  geometry/BoundingBox.h
  geometry/Disk.cpp
  geometry/Disk.h
  geometry/Face.h
  geometry/GeometryPoint.h
  geometry/Plane.cpp
  geometry/Plane.h
  geometry/Quad.h
  geometry/Quadric.h
  geometry/Sphere.cpp
  geometry/Sphere.h
  geometry/Triangle.h
  geometry/TriangleIntersection.h
  geometry/TriangleIntersection_BW9.h
  geometry/TriangleIntersection_BW12.h
  geometry/TriangleIntersection_MT.h
  geometry/TriangleIntersection_PI.h
  geometry/TriangleIntersection_PI_Mem.h
  geometry/TriangleIntersection_PI_Off.h
  geometry/TriangleIntersection_WT.h
  infinitelight/IInfiniteLight.cpp
  infinitelight/IInfiniteLight.h
  integrator/IIntegrator.cpp
  integrator/IIntegrator.h
  integrator/IIntegratorFactory.h
  log/ConsoleLogListener.cpp
  log/ConsoleLogListener.h
  log/FileLogListener.cpp
  log/FileLogListener.h
  log/LogListener.h
  material/IMaterial.cpp
  material/IMaterial.h
  material/IMaterial.inl
  material/MaterialData.h
  material/MaterialType.h
  math/Compression.h
  math/Fresnel.h
  math/Generator.h
  math/HemiMap.h
  math/ImportanceSampling.h
  math/Microfacet.h
  math/Projection.h
  math/ProjectionMap.h
  math/Reflection.h
  math/SIMath.h
  math/SIMathConstants.h
  math/SIMathStd.h
  math/SIMathUtils.h
  math/SphereMap.h
  math/Spherical.h
  math/Tangent.h
  memory/MemoryPool.h
  memory/MemoryPool.inl
  memory/MemoryStack.h
  memory/MemoryStack.inl
  mesh/Mesh.cpp
  mesh/Mesh.h
  mesh/MeshBase.cpp
  mesh/MeshBase.h
  mesh/MeshBase.inl
  mesh/MeshFactory.cpp
  mesh/MeshFactory.h
  mesh/MeshInfo.h
  mesh/TriMeshBW9.cpp
  mesh/TriMeshBW9.h
  mesh/TriMeshBW12.cpp
  mesh/TriMeshBW12.h
  mesh/TriMeshMT.cpp
  mesh/TriMeshMT.h
  mesh/TriMeshPI.cpp
  mesh/TriMeshPI.h
  mesh/TriMeshPIMem.cpp
  mesh/TriMeshPIMem.h
  mesh/TriMeshPIOff.cpp
  mesh/TriMeshPIOff.h
  mesh/TriMeshWT.cpp
  mesh/TriMeshWT.h
  path/LightPath.cpp
  path/LightPath.h
  path/LightPath.inl
  path/LightPathBuffer.cpp
  path/LightPathBuffer.h
  path/LightPathExpression.cpp
  path/LightPathExpression.h
  path/LightPathManager.cpp
  path/LightPathManager.h
  path/LightPathToken.h
  path/LPE_Automaton.cpp
  path/LPE_Automaton.h
  path/LPE_Parser.cpp
  path/LPE_Parser.h
  path/LPE_RegExpr.cpp
  path/LPE_RegExpr.h
  path/LPE_RegState.h
  photon/Photon.h
  photon/PhotonMap.h
  photon/PhotonMap.inl
  ray/RayPackage.h
  ray/RayStream.cpp
  ray/RayStream.h
  renderer/RenderContext.cpp
  renderer/RenderContext.h
  renderer/RenderEnums.h
  renderer/RenderFactory.cpp
  renderer/RenderFactory.h
  renderer/RenderSettings.h
  renderer/RenderTileStatistics.h
  renderer/RenderStatus.h
  renderer/RenderSettings.cpp
  renderer/RenderStatus.cpp
  renderer/RenderThread.cpp
  renderer/RenderThread.h
  renderer/RenderThreadStatistics.cpp
  renderer/RenderThreadStatistics.h
  renderer/RenderTile.cpp
  renderer/RenderTile.h
  renderer/RenderTileMap.cpp
  renderer/RenderTileMap.h
  renderer/RenderTileSession.cpp
  renderer/RenderTileSession.h
  renderer/RenderTileStatistics.cpp
  renderer/RenderTileStatistics.h
  renderer/StreamPipeline.cpp
  renderer/StreamPipeline.h
  renderer/StreamPipeline.inl
  sampler/Distribution1D.cpp
  sampler/Distribution1D.h
  sampler/Distribution2D.cpp
  sampler/Distribution2D.h
  sampler/ISampler.h
  sampler/ISamplerFactory.h
  sampler/SplitSample.h
  scene/Scene.cpp
  scene/Scene.h
  scene/Scene.inl
  serialization/BufferSerializer.h
  serialization/BufferSerializer.cpp
  serialization/FileSerializer.h
  serialization/FileSerializer.cpp
  serialization/ISerializable.h
  serialization/Serializer.h
  serialization/Serializer.cpp
  serialization/Serializer.inl
  spectral/RGBConverter.cpp
  spectral/RGBConverter.h
  spectral/RGBSpectrumDescriptor.cpp
  spectral/RGBSpectrumDescriptor.h
  spectral/SpectralBlob.h
  spectral/SpectralUpsampler.cpp
  spectral/SpectralUpsampler.h
  spectral/Spectrum.cpp
  spectral/Spectrum.h
  spectral/Spectrum.inl
  spectral/SpectrumDescriptor.cpp
  spectral/SpectrumDescriptor.h
  spectral/SpectrumLazyOperator.h
  spectral/SpectrumTag.h
  spectral/ToneMapper.cpp
  spectral/ToneMapper.h
  spectral/XYZSpectrumDescriptor.cpp
  spectral/XYZSpectrumDescriptor.h
  shader/ShadingGroup.cpp
  shader/ShadingGroup.h
  shader/ShadingGroupBlock.h
  shader/ShadingPoint.h
  shader/Socket.h
  thread/Thread.cpp
  thread/Thread.h
  thread/Thread.inl
  trace/HitEntry.h
  trace/HitStream.cpp
  trace/HitStream.h
  trace/ShadowHit.h
)

if(${CMAKE_VERSION} VERSION_LESS 3.15)
  set(_BOOST_HEADERS Boost::boost)
else()
  set(_BOOST_HEADERS Boost::headers)
endif()

add_library(pr_lib_base ${PR_Src})
add_dependencies(pr_lib_base prhwinfo)
if(NOT WIN32)
  target_link_libraries(pr_lib_base PUBLIC ${CMAKE_DL_LIBS} Threads::Threads)
endif()
target_link_libraries(pr_lib_base PUBLIC ${_BOOST_HEADERS} Boost::filesystem Eigen3::Eigen TBB::tbb)
set_target_properties(pr_lib_base PROPERTIES CXX_VISIBILITY_PRESET hidden)
target_compile_definitions(pr_lib_base PUBLIC "$<$<CONFIG:Debug>:PR_DEBUG>")
if(NOT BUILD_SHARED_LIBS)
  target_compile_definitions(pr_lib_base PUBLIC "PR_LIB_STATIC")
  set_target_properties(pr_lib_base PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
endif()
target_compile_definitions(pr_lib_base PRIVATE "PR_LIB_BUILD")
add_lto(pr_lib_base)
if(BUILD_SHARED_LIBS)
  strip_binary(pr_lib_base)
endif()