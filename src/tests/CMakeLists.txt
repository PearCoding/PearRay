if(VERBOSE)
	message(STATUS "Enabling Testing")
endif()

include_directories(../utils)

set(PRT_Pre Test.h testscene.inl)

FUNCTION(PUSH_TEST name files)
	set(options USES_UTILS NO_ADD)
	set(oneValueArgs)
	set(multiValueArgs)
	cmake_parse_arguments(__args "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )

	IF((NOT __args_USES_UTILS) OR PR_WITH_UTILITY_LIBRARY)
		list(APPEND files ${PRT_Pre})
		set(TARGET pr_test_${name})
		add_executable(${TARGET} ${files})
		target_link_libraries(${TARGET} pr_lib)
		IF(__args_USES_UTILS)
			target_link_libraries(${TARGET} pr_lib_utils)
		ENDIF()
		target_compile_definitions(${TARGET} PRIVATE "${DEFS}" "$<$<CONFIG:Debug>:${DEFS_DEBUG}>")
		add_lto(${TARGET})
		strip_binary(${TARGET})
		IF(NOT __args_NO_ADD)
			add_test(NAME ${name} COMMAND ${TARGET})
		ENDIF()
	ENDIF()
ENDFUNCTION(PUSH_TEST)

PUSH_TEST(spectrum spectrum.cpp NO_ADD)
PUSH_TEST(spectrum_lazy spectrum_lazy.cpp)
PUSH_TEST(plane plane.cpp)
PUSH_TEST(entity entity.cpp)
PUSH_TEST(boundingbox boundingbox.cpp)
PUSH_TEST(projection projection.cpp)
#PUSH_TEST(brdf brdf.cpp)
PUSH_TEST(sphere sphere.cpp)
PUSH_TEST(generator generator.cpp)
PUSH_TEST(registry registry.cpp USES_UTILS)
PUSH_TEST(triangle triangle.cpp)
PUSH_TEST(lpe lpe.cpp)
PUSH_TEST(fresnel fresnel.cpp)
#PUSH_TEST(inteqen inteqen.cpp USES_UTILS NO_ADD)
PUSH_TEST(quicksort quicksort.cpp)
PUSH_TEST(radixsort radixsort.cpp)
PUSH_TEST(random random.cpp)
#PUSH_TEST(seed seed.cpp USES_UTILS NO_ADD)
PUSH_TEST(specular specular.cpp)
PUSH_TEST(photon photon.cpp)
PUSH_TEST(kdtree kdtree.cpp)
PUSH_TEST(simd simd.cpp)
PUSH_TEST(compression compression.cpp)
PUSH_TEST(tangent tangent.cpp)
PUSH_TEST(vector vector.cpp)

IF(PR_HAS_PYTHON_API AND PR_BUILD_TESTS_PYTHON)
	add_subdirectory(python)
ENDIF()