#pragma once

#define PR_STRINGIFY(str)	#str
#define PR_DOUBLEQUOTE(str) PR_STRINGIFY(str)

#define PR_NAME_STRING		PR_DOUBLEQUOTE(${CMAKE_PROJECT_NAME})
#define PR_VENDOR_STRING	PR_DOUBLEQUOTE(${VENDOR})

#define PR_VERSION_MAJOR	${VERSION_MAJOR}
#define PR_VERSION_MINOR	${VERSION_MINOR}
#define PR_VERSION_STRING 	PR_DOUBLEQUOTE(${VERSION_MAJOR}) "." PR_DOUBLEQUOTE(${VERSION_MINOR})
#define PR_VERSION			${VERSION_HEX}
#define PR_VERSION_CHECK(major, minor) (((major) << 8) | (minor))

#define PR_APP_TITLE		"PearRay - (C) PearCoding"

//OS
#if defined(__linux) || defined(linux)
# define PR_OS_LINUX
# define PR_OS_NAME "Linux"
#elif defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__WINDOWS__) || defined(__TOS_WIN__)
# define PR_OS_WINDOWS
# if !defined(Win64) && !defined(_WIN64)
#  define PR_OS_WINDOWS_32
#  define PR_OS_NAME "Microsoft Windows 32 Bit"
# else
#  define PR_OS_WINDOWS_64
#  define PR_OS_NAME "Microsoft Windows 64 Bit"
# endif
#else
# error Your operating system is currently not supported
#endif

//Compiler
#if defined(__CYGWIN__)
# define PR_CC_CYGWIN
# define PR_CC_NAME "Cygwin"
#endif

#if defined(__GNUC__)
# define PR_CC_GNU
# define PR_CC_NAME "GNU C/C++"
#endif

#if defined(__MINGW32__)
# define PR_CC_MINGW32
# if !defined(PR_CC_GNU)
#  define PR_CC_NAME "MinGW 32"
# else
#  undef PR_CC_NAME
#  define PR_CC_NAME "GNU C/C++(MinGW 32)"
# endif
#endif

#if defined(__INTEL_COMPILER)
# define PR_CC_INTEL
# define PR_CC_NAME "Intel C/C++"
#endif

#if defined(_MSC_VER)
# define PR_CC_MSC
# define PR_CC_NAME "Microsoft Visual C++"
# pragma warning(disable: 4251 4996)
#endif

#if !defined(PR_CC_NAME)
# define PR_CC_NAME "Unknown compiler"
#endif

#if defined(PR_DEBUG)
# define PR_BUILDVARIANT_NAME "Debug"
# define PR_BUILD_STRING PR_NAME_STRING " " PR_VERSION_STRING " build variant " PR_BUILDVARIANT_NAME " on " __DATE__  " at " __TIME__ " with " PR_CC_NAME " { OS: " PR_OS_NAME "; Last change: " __TIMESTAMP__ "}\n"
#else
# ifndef PR_RELEASE
#  define PR_RELEASE
# endif
# define PR_BUILDVARIANT_NAME "Release"
# define PR_BUILD_STRING PR_NAME_STRING " " PR_VERSION_STRING " build variant " PR_BUILDVARIANT_NAME " { OS: " PR_OS_NAME " }\n"
#endif

#ifdef PR_CC_MSC
# define PR_DEBUG_BREAK() __debugbreak()
# define PR_ALIGN(x) __declspec(align(x))
#else//FIXME: Really use cpu dependent assembler?
# define PR_DEBUG_BREAK() __asm__ __volatile__ ("int $0x03")
# define PR_ALIGN(x) __attribute__((aligned(x)))
#endif

#ifndef PR_NO_ASSERTS
# define PR_ASSERT(cond) \
	do \
	{ \
		if(!(cond)) \
		{ \
			PR_DEBUG_BREAK(); \
		} \
	} while(0)
#else
# define PR_ASSERT(cond)
#endif

#if defined(TGJ_DEBUG)
# define PR_DEBUG_ASSERT(cond) PR_ASSERT(cond)
#else
# define PR_DEBUG_ASSERT(cond) PR::pr_Noop()
#endif

#define PR_CLASS_NON_MOVEABLE(C) \
	private: \
		C(C&&) = delete; \
		C& operator=(C&&) = delete

#define PR_CLASS_NON_COPYABLE(C) \
	private: \
		C(const C&) = delete; \
		C& operator=(const C&) = delete; \
		PR_CLASS_NON_MOVEABLE(C)

#if !defined(PR_LIB_STATIC)
# if defined(PR_OS_WINDOWS)
#  define PR_EXPORT __declspec(dllexport)
#  define PR_IMPORT __declspec(dllimport)
# elif defined(PR_OS_LINUX)
#  define PR_EXPORT __attribute__((visibility ("default")))
#  define PR_IMPORT
# else
#  error Unsupported operating system
# endif
#else
# define PR_EXPORT
# define PR_IMPORT
#endif

#if defined(PR_LIB_BUILD)
# define PR_LIB PR_EXPORT
#else
# define PR_LIB PR_IMPORT
#endif
#define PR_LIB_INLINE

#include <chrono>

namespace PR
{
	inline void pr_Noop()
	{
	}
	
	typedef signed char int8;
	typedef unsigned char uint8;

	typedef signed short int16;
	typedef unsigned short uint16;

	typedef signed int int32;
	typedef unsigned int uint32;

#if defined __GLIBC_HAVE_LONG_LONG
	__extension__ typedef signed long long int int64;
	__extension__ typedef unsigned long long int uint64;
#else
	typedef signed long int int64;
	typedef unsigned long int uint64;
#endif
	
	typedef std::chrono::high_resolution_clock::time_point TimePoint;
	typedef uint32 EntityID;
	typedef uint32 DataRefID;
}
